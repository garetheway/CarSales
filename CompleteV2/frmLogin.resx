<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rU8a1jtoXFOEYQUvMjFoip78B6O61qQCQf+V/1ern82wjozhewjDCl5kYtAUaXfkBD2FvmmhOfrZDEtv
        DRMfnBhW8CITg6bpyV2WWX078PGzgtqZXEm/APmVp6J2Z9/b9DFa57kvowV+1q+U2sqsz35G172nMe+0
        TX369by/mvfzOvXXM8fuzss7C03Xctt3Ud31sSX5Pmq+1c7mrpwm6XzNU+3T+U8/Ou1sCOo89Dyqhnt+
        3N+OdN7VGtUxnad2Vh9H7z/185u6TF5kYtAEeaKeREbY5WNPGFYvnMSqvfpXQlMbo+JP3+cU65PTUT6T
        klF11LYXvwrmbLyiFv/ZGOu9OfbVDatytCjrfSi3/VuuaqtKuernJHr+1C6dV6nzUPN4tiY1ntUv8+/U
        qA1LSGl+vBm4VJfJi0wMmoU+UTh1MiTH7y4Mq5qVjLFOnK7tyV4tfrfVpNdFLtU89GO6lsemP/uiqG27
        YddC6GPW373TVQH0/LjPNF79txdTX2iSc3H0Sqjj4u681IV2VZ+oO7OqH9+H8qV868/Vvdc517n9mppX
        HxdezF2r3FXVPArVRJ9v14lIc/pOjUq1TnX9dM+W+9mqy+RFJgbNiTQ4d/Qu/UYdv7swpJrQnqSqnSSv
        pKJL19Y11VaT2M3Y8jminuPdVTIVS/323Ogavt5qMUir+/2ZDUuke/J9iL6guzxvmvNV/rtJJK1yV7Wb
        R+dMY+qqx67WqFTXl9ZIfbBWXa7L5EUmBs0FqTNx18D64nT87sKQfOxoAa5UJ2M1mUdSEazGVZXO85Nx
        VdArqWA85rPFlfTVDWuVL82f6iu1qaQHxG4N1UV5Nuc1B+lht8pd1W4eZRA+r9fxOzUq7a6Ry3WZvMjE
        oAnSwDRw4QJfOavO2SkU0Xcxjt9dGHWijnZXK3ncR7urlWrfR08UKZlELUb13+/tSL6ekPGd9V/1oxqW
        5TGt0MLs2jEPqY5ttR6q/GA/MsmjPnfzWI201sK7NSpVwzrTpbpMXmRi0LykC9d34cTZZJ61F08bVk3m
        TgF1+boa+1XJIN33Lr0Y0jU06We51r3W4jBqd7cwq3y9r2hYuq/UrtJrZcc8pKsPOK+JdP5On3cMq87Z
        EzV6xbAu1WXyIhOD5iVdrHaw4mgx1BtboZupcvzuwqjFfUdue1aoSTv320kmoUlW/96S9/OPjFgFmXa3
        ytdqx/mjG5bHdER/tVndR5dzl3ZMSb6XNOadPt81rCdq9IphWVt1mbzIxKD5Vd6+nqGnRp9wDWKnUPpO
        xvGvblg9H3elB4LGUs1Lfz/bNUlq14skmdKPaliag7RIEnd3WHcN6+5r6JOGdbdG7xhWle4v1mXyIhOD
        5lfdceOr9IXn+N2F8e6E+LpHi3elWkw7hnJVujcbV9+ZHqkv3J7br25Y76Ixd+2Yh6Sc6bzdV0LPw/d6
        Jazt79bou4Zl/aYukxeZGDRFu7usO6Snko/dXRiaBF/jrNiSnMD0BDyTntLv9L0j7Vzdx9GrYZLnsu9q
        f3bDSt8rdw2rjm1nPvzASbn+fxjWEzX6lGFZ/6vL5EUmBk2RbtxJfhJdU9fu8nEl5UhHk+tj+vOq6mSc
        jSHJyd/pOy3+s6Kvhdjzd9bWu4G+WK4Y1t15mWxYaR6O6quqzsfZufU+7va5m8c6rt7XuzV61bC26zJ5
        kYlB01ST9AQyq9V21Mk8WjxqaxNNk1sTmp6eltqqv55QF87KVCXFdV5fwLXvo8LzTq6e493hkSnU69dx
        63rpXqp8X3d2WO/Oy+5CS9K13PZp0i5f2jEPy3MpVj9s1NysXued49WYpCcM650alWr7M12qy+RFJgZN
        kBLuC7+DJmtlAlItzp4oFYPdeHWOVYtIf6996u/1eDcIG4dQkfXj+m8XX5oMF57QeOtxta3H6/hrXOPT
        OKpqbqpx1NdEjavnRAVrUxI9/zuGVfvu19+Zl7rQVot6pdr3k6ieVwvpimEpn64HoQdCva6u4eP6c1X/
        tSbr3Nd8PWFY0t0alXTcx450uS6TF5kYNAe6WzxKwE6hKnFnxqgE7xRUTcaK1ZhqYazQ9VPBK3an7912
        OqerFscRqXjd55FhvTsvat/PP9r9Vt2tuSNkDmnurCuGJe080LVo+0OoalVzGqtVzznSmWHdrVFp17Ck
        S3WZvMjEoNmQBqLJPLppFaTOWT1RVlIye5HK8BRzkbnfs6LXOOuTS9jtz8blcfjpaHQ9TdqZdE7Pj4q6
        3keSxqz7qu2E+k0FZHm89ekofL+rPncMS/L167WvzEstXrXbyaHU+7zLlXq8aliWzl/N+Y6Uoz5/dV6e
        MizrTo1eMSxpuy6TF5kYBACYSAwCAEwkBgEAJhKDAAATiUEAgInEIADARGIQAGAiMQgAMJEYBACYSAwC
        AEwkBgEAJhKDAAATiUEAgInEIADARGIQAGAiMQgAMJEYBACYSAwCAEwkBgEAJhKDAAATiUEAgInEIADA
        RGIQAGAiMQgAMJEYBACYSAwCAEwkBgEAJhKDAAATiUEAgInEIADARGIQAGAiMQgAMJEYBACYSAwCAEwk
        BgEAJhKDAAATiUEAgHl8++U/yAxnSZkoGXUAAAAASUVORK5CYII=
</value>
  </data>
</root>